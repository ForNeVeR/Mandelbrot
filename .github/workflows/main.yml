# SPDX-FileCopyrightText: 2025 Friedrich von Never <friedrich@fornever.me>
#
# SPDX-License-Identifier: MIT

name: main
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 0 * * 6
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # renovate:
          - runner: macos-15
            os: macos
            arch: aarch64
          # renovate:
          - runner: ubuntu-24.04
            os: linux
            arch: x86-64
          # renovate:
          - runner: ubuntu-24.04-arm
            os: linux
            arch: aarch64
          # renovate:
          - runner: windows-11-arm
            os: windows
            arch: aarch64
          # renovate:
          - runner: windows-2025
            os: windows
            arch: x86-64
      fail-fast: false
    name: Build on ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        shell: pwsh
        run: cargo build --release

      - name: Inspect the build directory
        shell: pwsh
        run: ls target/release

      - name: Upload the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mandelbrot.${{ matrix.os }}.${{ matrix.arch }}
          path: |
            target/release/Mandelbrot
            target/release/Mandelbrot.exe
            target/release/Mandelbrot.pdb
          if-no-files-found: 'ignore'

  encoding:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Verify encoding
        shell: pwsh
        run: Install-Module VerifyEncoding -Repository PSGallery -RequiredVersion 2.2.0 -Force && Test-Encoding

  licenses:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: REUSE license check
        uses: fsfe/reuse-action@v5
